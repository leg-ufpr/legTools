% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/legTools.R
\docType{data}
\name{sugarcaneYield4}
\alias{sugarcaneYield4}
\title{Triple factorial NPK fertilization on sugar cane yield}
\format{a \code{data.frame} with 54 records and 6 variables.}
\source{
Frederico, P. (2009). Curso de Estatística Experimental (15th
    ed.). Piracicaba, São Paulo: FEALQ. (page 126)
}
\usage{
data(sugarcaneYield4)
}
\description{
These data are from an \eqn{3^3} factorial experiment
    studing the effect of NPK on the yield of sugar cane.

\itemize{
  \item \code{block} a local control factor with 3 levels.
  \item \code{rept} factor with 2 levels.
  \item \code{N} integer coded nitrogen levels (0, 1, 2).
  \item \code{P} integer coded phosphorus levels (0, 1, 2).
  \item \code{K} integer coded potassium levels (0, 1, 2).
  \item \code{yield} sugar cane yield (ton/ha).
}
}
\details{
There is a missprint in the book for the 9th entry, which
    has yield 59.0, that is coded as 202 istead of 220.
}
\examples{
library(lattice)
library(latticeExtra)
library(multcomp)

data(sugarcaneYield4)
str(sugarcaneYield4)

xyplot(yield~N|P, groups=K,
       auto.key=list(title="Potassim level", columns=3),
       strip=strip.custom(var.name="Phosphorus", strip.names=TRUE,
                          strip.levels=TRUE, sep=": "),
       data=sugarcaneYield4, type=c("p", "a"),
       ylab=expression(Yield~(ton~ha^{-1})),
       xlab="Nitrogen level level")

## Sums in each cell combination.
addmargins(with(sugarcaneYield4, tapply(yield, list(P, N), FUN=sum)))
addmargins(with(sugarcaneYield4, tapply(yield, list(K, N), FUN=sum)))
addmargins(with(sugarcaneYield4, tapply(yield, list(K, P), FUN=sum)))

sugarcaneYield4 <- transform(sugarcaneYield4,
                             blockr=interaction(block, rept),
                             nitro=factor(N),
                             phosp=factor(P),
                             potas=factor(K))
str(sugarcaneYield4)

m0 <- lm(yield~blockr+(nitro+phosp+potas)^3, data=sugarcaneYield4)
par(mfrow=c(2,2)); plot(m0); layout(1)
anova(m0)

m1 <- update(m0, .~blockr+(nitro+phosp)^2)
par(mfrow=c(2,2)); plot(m1); layout(1)

anova(m0, m1)
anova(m1)

m2 <- aov(yield~blockr+nitro/phosp, data=sugarcaneYield4)
anova(m2)

PinN <- sapply(paste0("nitro", levels(sugarcaneYield4$nitro)),
               FUN=grep, x=names(coef(m2))[m2$assign==3L],
               simplify=FALSE)

summary(m2, split=list("nitro:phosp"=PinN))

X <- model.matrix(m1)
X

aggregate(X~nitro+phosp, data=sugarcaneYield4, FUN=mean)

## It is better use multcomp::LSmatrix().
L <- aggregate(X~nitro+phosp, data=sugarcaneYield4, FUN=mean)
rownames(L) <- with(L, paste0("N", nitro, ":P", phosp))
L <- as.matrix(L[, colnames(X)])
str(L)

## Least squares means for N:P combinations.
L\%*\%coef(m1)

g1 <- glht(m1, linfct=L)

confint(g1, calpha=univariate_calpha())
}
\keyword{datasets}

